function Ball.new 0
    push constant 19
    call Memory.alloc 1
    pop pointer 0
    push argument 0
    pop static 0
    push argument 1
    pop static 1
    push constant 240
    pop static 2
    push constant 90
    pop static 3
    push constant 0
    pop this 0
    push constant 0
    pop this 1
    push constant 10
    push constant 100
    call Math.multiply 2
    pop this 2
    push constant 0
    pop this 3
    push constant 35
    push constant 100
    call Math.multiply 2
    pop this 4
    push constant 71
    push constant 100
    call Math.multiply 2
    pop this 5
    push constant 0
    pop this 12
    push constant 0
    pop this 13
    push constant 0
    pop this 14
    push constant 0
    pop this 18
    push constant 35
    pop this 16
    push constant 4
    pop this 17
    push pointer 0
    return
function Ball.dispose 0
    push argument 0
    pop pointer 0
    push pointer 0
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return
function Ball.setStrike 0
    push argument 0
    pop pointer 0
    push argument 1
    pop this 12
    push argument 2
    pop this 13
    push constant 100
    push this 12
    push this 12
    call Math.multiply 2
    sub
    push this 13
    push this 13
    call Math.multiply 2
    sub
    pop this 14
    push this 14
    call Math.sqrt 1
    pop this 14
    push this 14
    neg
    pop this 14
    push this 13
    push this 5
    push constant 100
    call Math.divide 2
    call Math.multiply 2
    push this 14
    push this 4
    push constant 100
    call Math.divide 2
    call Math.multiply 2
    sub
    pop this 9
    push this 12
    push this 5
    push constant 100
    call Math.divide 2
    call Math.multiply 2
    neg
    pop this 10
    push this 12
    push this 4
    push constant 100
    call Math.divide 2
    call Math.multiply 2
    pop this 11
    push constant 0
    return
function Ball.getPosX 0
    push argument 0
    pop pointer 0
    push this 0
    return
function Ball.getPosY 0
    push argument 0
    pop pointer 0
    push this 1
    return
function Ball.getPosZ 0
    push argument 0
    pop pointer 0
    push this 2
    return
function Ball.getIsDone 0
    push argument 0
    pop pointer 0
    push this 18
    return
function Ball.calculateMagnusAccelerations 3
    push argument 0
    pop pointer 0
    push this 10
    push this 5
    push constant 10
    call Math.divide 2
    call Math.multiply 2
    push this 11
    push this 4
    push constant 10
    call Math.divide 2
    call Math.multiply 2
    sub
    push this 17
    call Math.divide 2
    pop local 0
    push this 11
    push this 3
    push constant 10
    call Math.divide 2
    call Math.multiply 2
    push this 9
    push this 5
    push constant 10
    call Math.divide 2
    call Math.multiply 2
    sub
    push this 17
    call Math.divide 2
    pop local 1
    push this 9
    push this 4
    push constant 10
    call Math.divide 2
    call Math.multiply 2
    push this 10
    push this 3
    push constant 10
    call Math.divide 2
    call Math.multiply 2
    sub
    push this 17
    call Math.divide 2
    pop local 2
    push constant 0
    return
function Ball.updatePosition 0
    push argument 0
    pop pointer 0
    push this 0
    push this 3
    push constant 100
    call Math.divide 2
    push constant 5
    call Math.multiply 2
    add
    pop this 0
    push this 1
    push this 4
    push constant 100
    call Math.divide 2
    push constant 5
    call Math.multiply 2
    add
    pop this 1
    push this 2
    push this 5
    push constant 100
    call Math.divide 2
    push constant 5
    call Math.multiply 2
    add
    pop this 2
    push this 3
    push this 6
    push constant 5
    call Math.multiply 2
    push constant 100
    call Math.divide 2
    add
    pop this 3
    push this 4
    push this 7
    push constant 5
    call Math.multiply 2
    push constant 100
    call Math.divide 2
    add
    push constant 161
    sub
    pop this 4
    push this 5
    push this 8
    push constant 5
    call Math.multiply 2
    push constant 100
    call Math.divide 2
    add
    pop this 5
    push this 1
    push constant 100
    lt
    push this 2
    push constant 9000
    gt
    or
    not
    if-goto Ball_1
    push constant 0
    pop this 1
    push constant 1
    neg
    pop this 18
    goto Ball_0
label Ball_1
label Ball_0
    push constant 0
    return
function Ball.draw 3
    push argument 0
    pop pointer 0
    push static 0
    push constant 2
    call Math.divide 2
    push this 0
    push constant 100
    call Math.divide 2
    push static 2
    call Math.multiply 2
    push this 2
    push constant 100
    call Math.divide 2
    call Math.divide 2
    add
    pop local 0
    push static 1
    push constant 2
    call Math.divide 2
    push this 1
    push constant 100
    call Math.divide 2
    push static 2
    call Math.multiply 2
    push this 2
    push constant 100
    call Math.divide 2
    call Math.divide 2
    sub
    pop local 1
    push constant 3
    push static 2
    call Math.multiply 2
    push this 2
    push constant 100
    call Math.divide 2
    call Math.divide 2
    pop local 2
    push local 0
    push local 1
    push local 2
    call Screen.drawCircle 3
    pop temp 0
    push constant 0
    return